/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author david
 */
public class GUI extends javax.swing.JFrame {

    private Server server;
    private String selectedProject = "";
    /**
     * Creates new form GUI
     */
    public GUI() {
        // Client
        try {
            initComponents();
            this.server = new Server("Server1");
        } catch (RemoteException | NotBoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error creando el servidor", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        projectNameLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        addProjectBtn = new javax.swing.JButton();
        addFileBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectFiles = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        projectsTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        jLabel1.setText("SISTEMA DE ARCHIVOS DISTRIBUIDO");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        addProjectBtn.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        addProjectBtn.setText("Crear Proyecto");
        addProjectBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProjectBtnMouseClicked(evt);
            }
        });

        addFileBtn.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        addFileBtn.setText("Añadir archivo");
        addFileBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFileBtnMouseClicked(evt);
            }
        });

        projectFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Archivos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projectFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectFilesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(projectFiles);
        if (projectFiles.getColumnModel().getColumnCount() > 0) {
            projectFiles.getColumnModel().getColumn(0).setResizable(false);
        }

        projectsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Proyecto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(projectsTable);
        if (projectsTable.getColumnModel().getColumnCount() > 0) {
            projectsTable.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addFileBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(addProjectBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(projectNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(projectNameLbl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addProjectBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addFileBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProjectBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProjectBtnMouseClicked
        String projectName = JOptionPane.showInputDialog(this, "Nombre Proyecto");
        if(projectName == null || projectName.equals("")){
            JOptionPane.showMessageDialog(this, "El nombre del proyecto no puede estar vacio", "ERROR", JOptionPane.ERROR_MESSAGE);
        }else{
            if(server.addProject(projectName)){
                ((DefaultTableModel)projectsTable.getModel()).addRow(new String[]{projectName});
                JOptionPane.showMessageDialog(this, "Proyecto creado satisfactoriamente", "EXITO", JOptionPane.PLAIN_MESSAGE);
                selectedProject = projectName;
            }else{
                JOptionPane.showMessageDialog(this, "Error creando el proyecto", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addProjectBtnMouseClicked

    private void addFileBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFileBtnMouseClicked
        
        if(selectedProject.equals("")){
            JOptionPane.showMessageDialog(this, "Debe crear o seleccionar un proyecto", "ERROR", JOptionPane.ERROR_MESSAGE);
        }else{
            JFileChooser jFileChooser = new JFileChooser();
            int result = jFileChooser.showOpenDialog(this);
            if(result == JFileChooser.APPROVE_OPTION){
                try {
                    File file = jFileChooser.getSelectedFile();
                    data.File newFile = new data.File(file.getName(), file.getAbsolutePath());
                    if(server.addFileToProject(selectedProject, newFile)){
                        ((DefaultTableModel)projectFiles.getModel()).addRow(new String[]{file.getName()});
                    }
                } catch (IOException ex) {
                     JOptionPane.showMessageDialog(this, "Error añadiendo el archivo", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_addFileBtnMouseClicked

    private void projectFilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectFilesMouseClicked
        if(evt.getClickCount() == 2){
            if(projectFiles.getValueAt(projectFiles.getSelectedRow(), 0) != null){
                String fileName = (String)projectFiles.getValueAt(projectFiles.getSelectedRow(), 0);
                String filePath = server.getFilePath(fileName);
                if(!filePath.equals("")){
                    try {
                        System.out.println("Empezo a editar " + fileName);
                        if(server.createCopy(fileName)){
                            Process p = Runtime.getRuntime().exec("notepad " + filePath);
                            p.waitFor();
                            System.out.println("Termindo de editar " + fileName);
                            server.saveFile(fileName);
                        }
                    } catch (IOException ex) {
                        ex.printStackTrace();
                        JOptionPane.showMessageDialog(this, "Error abriendo el archivo", "ERROR", JOptionPane.ERROR_MESSAGE);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(this, "Error abriendo el archivo", "ERROR", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Error abriendo el archivo", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_projectFilesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFileBtn;
    private javax.swing.JButton addProjectBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable projectFiles;
    private javax.swing.JLabel projectNameLbl;
    private javax.swing.JTable projectsTable;
    // End of variables declaration//GEN-END:variables
}
